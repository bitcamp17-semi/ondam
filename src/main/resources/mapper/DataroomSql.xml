<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.DataroomMapper">
    <select id="readAllFolders" resultType="DataRoomDto">
        SELECT
            id,
            name,
            parentId AS parentId
        FROM data_room
        WHERE parentId IS NULL
        ORDER BY id;
    </select>

    <select id="readSubFolders" resultType="DataRoomDto">
        SELECT
            id,
            name,
            parentId AS parentId
        FROM data_room
        WHERE parentId = #{parentId}
        ORDER BY id;
    </select>

    <select id="readHasChild" resultType="boolean">
        SELECT COUNT(*) &gt; 0
        FROM data_room
        WHERE parentId = #{folderId}
    </select>

    <select id="readFolderExists" resultType="boolean">
        SELECT COUNT(*) &gt; 0
        FROM data_room
        WHERE name = #{folderName} AND parentid = #{parentId}
    </select>

    <insert id="insertFolder">
        INSERT INTO data_room (name, parentid, createdAt)
        VALUES (#{name}, #{parentId}, NOW());
    </insert>

    <delete id="deleteFolder">
        DELETE FROM data_room
        WHERE id = #{folderId};
    </delete>

    <select id="readFilesByRoomId" resultType="FilesDto">
        SELECT *
        FROM files
        WHERE roomId = #{roomId}
        ORDER BY createdAt DESC
    </select>
    <insert id="insertFile" parameterType="FilesDto">
        INSERT INTO files (name, path, type, teamId, departmentId, title, category, authorId, createdAt, updatedAt)
        VALUES (#{name}, #{path}, #{type}, #{teamId}, #{departmentId}, #{title}, #{category}, #{authorId}, NOW(), NOW())
    </insert>

    <delete id="deleteFiles" parameterType="int">
        delete from files
        where id = #{id}
    </delete>

    <select id="readDataroomById" resultType="FilesDto">
        SELECT * FROM files
        WHERE id = #{id}
    </select>

    <select id="readFilesByDepartmentId" resultType="FilesDto">
        SELECT *
        FROM files
        WHERE (departmentId = #{departmentId} OR #{departmentId} IS NULL)
        ORDER BY createdAt DESC
    </select>

    <select id="readFilesByTeamId" resultType="FilesDto">
        SELECT *
        FROM files
        WHERE (teamId = #{teamId} OR #{teamId} IS NULL)
        ORDER BY createdAt DESC
    </select>
    <select id="readUserNameById" resultType="string">
        SELECT name FROM user WHERE id = #{id}
    </select>

</mapper>